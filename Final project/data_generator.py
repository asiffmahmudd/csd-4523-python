# Name: Asif Mahmud
# ID: C0837117

# this file is for generating the data for the graph. 
# you will have to run this file first and then the app.py file

#importing required libraries
import csv
import random
import time
 
#The csv module implements classes to read and write tabular data in CSV format. 
# It allows programmers to say, “write this data in the format preferred by Excel,” or 
# “read data from this file which was generated by Excel,” without knowing the precise details of the CSV format used by Excel. 
# Programmers can also describe the CSV formats understood by other applications or define their own special-purpose CSV formats.
# reference: https://docs.python.org/3/library/csv.html

year = 1900 #setting the starting value of the year

fieldnames = ["year", "inflation"] # field names for data

# opening the csv file in write mode to write the header
with open('data.csv', 'w') as csv_file: 
    # csv.DictWriter - Create an object that operates like a regular reader but maps the information in each row to a dict whose keys are given by the optional fieldnames parameter.
    csv_writer = csv.DictWriter(csv_file, fieldnames = fieldnames)
    csv_writer.writeheader() # writing the header in the file

# infinite loop for generating data
while True:
    # opening the csv file in append mode to write data
    with open('data.csv', 'a') as csv_file:
        csv_writer = csv.DictWriter(csv_file, fieldnames=fieldnames)
        
        # getting a random value from 0-100 rounded to two decimal places for inflation
        inflation = round(random.uniform(0, 100), 2)
        #setting the variable for writing in the file
        info = {
            "year" : year,
            "inflation" : inflation
        }
        
        # writing one row into the file
        csv_writer.writerow(info)
        # this is just for the user to see the data in the console
        print(year, inflation)

        # increasing the year value
        year += 1
    
    # checking if the value reached 2022
    if(year == 2022):
        year = 1900 # resetting the year to 1900
        filename = "data.csv" 
        # opening the file with w+ mode truncates the file. 
        # this is for clearing the data so that the new plot doesn't overlap the old plot
        f = open(filename, "w+")
        f.close()

        # again writing the header of the csv file
        with open('data.csv', 'w') as csv_file:
            csv_writer = csv.DictWriter(csv_file, fieldnames = fieldnames)
            csv_writer.writeheader()

    # setting teh interval time for generating the data to 400 ms
    time.sleep(0.4)